<!DOCTYPE html>
<!-- saved from url=(0029)https://kinchan.toriiico.com/ -->
<html lang="en-US" class="fontawesome-i2svg-active fontawesome-i2svg-complete"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="theme-color" content="#157878">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

    
    <style type="text/css">
    svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.33333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1em}.svg-inline--fa.fa-stack-2x{height:2em;width:2em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}
    </style>
    <link rel="stylesheet" href="./kasou/bulma.min.css">
    
    <style>
      html {
        touch-action: manipulation;
      }
      .is-center {
        text-align: center;
      }
      .is-right {
        text-align: right;
      }
      .is-left {
        text-align: left;
      }
      .is-vertical-center {
        display: flex;
        align-items: center;
      }
      .canvas-wrapper {
        position: relative;
        width: 200px;
        height: 720px;
        margin: auto;
      }
      .canvas-wrapper canvas {
        position: absolute;
        top: 0;
        left: 0;
      }
      .is-hide {
        display: none;
      }
      .columns {
        display: flex;
        flex-wrap: nowrap;
        flex-direction: row;
        justify-content: center;
      }
      .column {
        display:block;
        flex-basis: 0;
        flex-grow: unset;
        flex-shrink: 1;
        width: 220px;
        padding: 10px;
      }
      .lamp {
        width: 60px;
        height: auto;
      }
    </style>
<style type="test/css">
#en-markup-alert-container .cell-2 {
    position: relative;
    float: left;
    width: 345px;
    margin-top: 29px;
    margin-bottom: 20px;
}

#en-markup-alert-container .cell-2 .cell-2-title {
    margin-bottom: 5px;
    padding-right: 30px;
    font-size: 12pt;
    font-family: Tahoma, Arial;
}

#en-markup-alert-container .cell-2 .cell-2-message {
    padding-right: 30px;
    font-size: 9.5pt;
    font-family: Tahoma, Arial;
}

#en-markup-alert-container .cell-3 {
    position: relative;
    width: 450px;
    height: 60px;
    float: left;
    background-color: rgb(240,240,240);
}

#en-markup-alert-container .cell-3 button {
    position: absolute;
    top: 12px;
    right: 15px;
    width: 110px;
    height: 36px;
}

#en-markup-alert-container .cell-3 button.alt-button {
    position: absolute;
    top: 12px;
    right: 140px;
    width: 110px;
    height: 36px;
}
</style></head>
  <body>
  <nav class="navbar is-warning" role="navigation" aria-label="main navigation" style="display:none">
    <div class="navbar-brand is-vertical-center">
      <h1 class="title is-4" style="margin: 0 12px 0 12px;">
        欽ちゃんの仮装大賞パネル 再現アプリ
      </h1>
      <button id="help" class="button is-primary">
        <svg class="svg-inline--fa fa-question-circle fa-w-16" aria-hidden="true" data-prefix="far" data-icon="question-circle" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"></path></svg>
      </button>
      <button id="show-helper-buttons" class="button" style="margin-left: 10px;">
        <svg class="svg-inline--fa fa-gamepad fa-w-20" aria-hidden="true" data-prefix="fas" data-icon="gamepad" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512" data-fa-i2svg=""><path fill="currentColor" d="M480 96H160C71.6 96 0 167.6 0 256s71.6 160 160 160c44.8 0 85.2-18.4 114.2-48h91.5c29 29.6 69.5 48 114.2 48 88.4 0 160-71.6 160-160S568.4 96 480 96zM256 276c0 6.6-5.4 12-12 12h-52v52c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-52H76c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h52v-52c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h52c6.6 0 12 5.4 12 12v40zm184 68c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-80c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z"></path></svg>
      </button>
    </div>
  </nav>

  <section id="progress-section" class="section is-hide">
    <div class="container is-center">
      <div class="is-mobile">
        <progress class="progress is-primary" max="100"></progress>
      </div>
    </div>
  </section>

  <section id="main-section" class="section">
    <div class="container is-center">
      <div class="columns">
        <div class="column" style="position: relative;">
          <div style="bottom: 0; position: absolute;"></div>
          <div class="canvas-wrapper" style="width:200px;">
            <canvas id="contentMain" width="200" height="720"></canvas>
            <canvas id="contentFrameAnim" width="200" height="720"></canvas>
          </div>
        </div>
        <div class="column">
          <div id="helper-buttons" style="width:200px;">
            <div style="margin-bottom: 30px;">
              <button id="reset" class="button">リセット</button>
              <div style="display:none">音量
                <input type="range" min="0" max="10" value="5" class="slider" id="volumeRange">
              </div>
            </div>
            <div style="margin-bottom: 20px; display:none">
              <button id="increment" class="button is-primary">加点</button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge1" class="button is-primary">審査員１
                <image id="j1lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge2" class="button is-primary">審査員２
                <image id="j2lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge3" class="button is-primary">審査員３
                <image id="j3lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge4" class="button is-primary">審査員４
                <image id="j4lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge5" class="button is-primary">審査員５
                <image id="j5lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge6" class="button is-primary">審査員６
                <image id="j6lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge7" class="button is-primary">審査員７
                <image id="j7lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge8" class="button is-primary">審査員８
                <image id="j8lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge9" class="button is-primary">審査員９
                <image id="j9lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
            <div style="margin-bottom: 20px;">
              <button id="judge10" class="button is-primary">審査員10
                <image id="j10lamp" src="img/p0.png" class="lamp"></image>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <div class="modal">
    <div class="modal-background"></div>
    <div class="modal-content">
      <div class="notification">
        操作方法
        <br>
        加点：A S D Space キー
        <br>
        リセット：R キー
        <br>
        v0.0.6
      </div>
    </div>
  </div>

  <script>
    "use strict"
    const WIDTH = 200
    const HEIGHT = 720
    const DEFAULT_SE_VOLUME = 0.5 // 0.0 ~ 1.0

    class PanelManager {
      constructor(context, contextFrameAnim) {
        this.context = context
        this.count = 0
        this.frameAnim = {
          context: contextFrameAnim,
          step: 1,
          maxStep: 6,
        }
        this.failTimer = {
          instance: null,
          limit: 3000,
        }
        this.isLoadedSE = false // iPhoneなどリソース読み込みに一部制限があるもの向け

        this.imgs = {
          bg: {
            instance: new Image(),
            path: "img/base.png",
          },
          numbers: [
            { instance: new Image(), path: "img/1.png" },
            { instance: new Image(), path: "img/2.png" },
            { instance: new Image(), path: "img/3.png" },
            { instance: new Image(), path: "img/4.png" },
            { instance: new Image(), path: "img/5.png" },
            { instance: new Image(), path: "img/6.png" },
            { instance: new Image(), path: "img/7.png" },
            { instance: new Image(), path: "img/8.png" },
            { instance: new Image(), path: "img/9.png" },
            { instance: new Image(), path: "img/10.png" },
            { instance: new Image(), path: "img/11.png" },
            { instance: new Image(), path: "img/12.png" },
            { instance: new Image(), path: "img/13.png" },
            { instance: new Image(), path: "img/14.png" },
            { instance: new Image(), path: "img/15.png" },
            { instance: new Image(), path: "img/16.png" },
            { instance: new Image(), path: "img/17.png" },
            { instance: new Image(), path: "img/18.png" },
            { instance: new Image(), path: "img/19.png" },
            { instance: new Image(), path: "img/20.png" }
          ],
          frameAnim: [
            { instance: new Image(), path: "img/kira1.png" },
            { instance: new Image(), path: "img/kira2.png" },
            { instance: new Image(), path: "img/kira3.png" },
            { instance: new Image(), path: "img/kira4.png" },
            { instance: new Image(), path: "img/kira5.png" },
            { instance: new Image(), path: "img/kira6.png" },
          ],
        }
        this.se = {
          numbers: [
            new Audio("se/1.mp3"),
            new Audio("se/2.mp3"),
            new Audio("se/3.mp3"),
            new Audio("se/4.mp3"),
            new Audio("se/5.mp3"),
            new Audio("se/6.mp3"),
            new Audio("se/7.mp3"),
            new Audio("se/8.mp3"),
            new Audio("se/9.mp3"),
            new Audio("se/10.mp3"),
            new Audio("se/11.mp3"),
            new Audio("se/12.mp3"),
            new Audio("se/13.mp3"),
            new Audio("se/14.mp3"),
            new Audio("se/15.mp3"),
            new Audio("se/16.mp3"),
            new Audio("se/17.mp3"),
            new Audio("se/18.mp3"),
            new Audio("se/19.mp3"),
            new Audio("se/20.mp3"),
          ],
          clear: new Audio("se/clear.mp3"),
          fail: new Audio("se/fail.mp3"),
        }

        this.changeVolume(DEFAULT_SE_VOLUME)

        this.preloadSE()
        this.preloadImages()

        this.drawBg()
      }

      preloadImages() {
        const drawList = [this.imgs.bg, ...this.imgs.frameAnim, ...this.imgs.numbers]
        let loadedCount = 0

        drawList.map((img) => {
          img.instance.onload = () => {
            loadedCount++
            if (loadedCount >= drawList.length) {
              this.preloadSuccess()
            }
          }
          img.instance.src = img.path
        })
      }

      preloadSE() {
        const seList = [this.se.clear, this.se.fail, ...this.se.numbers]
        seList.map((se) => {
          se.load()
        })
      }

      preloadSuccess() {
        this.showContentDOM()
        this.drawBg()
      }

      showContentDOM() {
        document.getElementById("progress-section").classList.add("is-hide")
        document.getElementById("main-section").classList.remove("is-hide")
      }

      clearSE() {
        this.se.clear.pause()
        this.se.clear.currentTime = 0
        this.se.fail.pause()
        this.se.fail.currentTime = 0

        for (let i; i < this.se.numbers.length; i++) {
          this.se.numbers[i].pause()
          this.se.numbers[i].currentTime = 0
        }
        clearTimeout(this.failTimer.instance)
      }

      reset() {
        this.clearSE()
        this.clearAllCanvas()
        clearInterval(this.frameAnim.instance)
        this.count = 0
        this.judgeCount = [ 0,0,0,0,0,0,0,0,0,0 ];
        this.frameAnim.step = 1

        this.drawBg()
      }

      getCount() {
        return this.count
      }

      setCount(c) {
        this.count = c
      }
      increment() {
        if (this.count >= 20) {
          return
        }

        this.count++

        // サウンド再生
        this.se.numbers[this.count - 1].play()

        // 画像配置
        this.drawNowCount()

        // 15点以上で合格サウンド
        if (this.count == 15) {
          this.se.fail.pause()
          this.se.fail.currentTime = 0
          this.se.clear.play()
          this.playFrameAnim()
        }

        // 残念サウンド
        clearTimeout(this.failTimer.instance)
        if (this.count < 15) {
          this.failTimer.instance = setTimeout(() => {
            this.se.fail.play()
          }, this.failTimer.limit)
        }
      }

      draw(imgInstance) {
        this.context.drawImage(imgInstance, 0, 0, WIDTH, HEIGHT)
      }

      drawBg() {
        this.draw(this.imgs.bg.instance)
      }

      drawNowCount() {
        if (this.count >0 && this.count <=20 ){
          this.draw(this.imgs.numbers[this.count - 1].instance)
        }
      }

      drawCount(count) {
        if (count >0 && count <=20 ){
          this.draw(this.imgs.numbers[count - 1].instance)
        }
      }

      drawFrameAnim() {
        this.frameAnim.context.drawImage(
          this.imgs.frameAnim[this.frameAnim.step - 1].instance,
          0,
          0,
          WIDTH,
          HEIGHT
        )
      }

      clearAllCanvas() {
        this.clearMainCanvas()
        this.clearFrameAnimCanvas()
      }

      clearMainCanvas() {
        this.context.clearRect(0, 0, WIDTH, HEIGHT)
      }

      clearFrameAnimCanvas() {
        this.frameAnim.context.clearRect(0, 0, WIDTH, HEIGHT)
      }

      playFrameAnim() {
        this.frameAnim.instance = setInterval(() => {
          this.clearFrameAnimCanvas()
          this.drawFrameAnim()

          if (this.frameAnim.step >= this.frameAnim.maxStep) {
            this.frameAnim.step = 1
          } else {
            this.frameAnim.step++
          }
        }, 50)
      }

      /**
       * @param {number} value - 0.0 ~ 1.0
       */
      changeVolume(value) {
        this.se.numbers.forEach((_, i) => {
          this.se.numbers[i].volume = value
        })
        this.se.clear.volume = value
        this.se.fail.volume = value
      }
    }
    class JudgeManager {
      constructor(panelmanager) {
        this.pm = panelmanager
        this.judgeCount = [ 0,0,0,0,0,0,0,0,0,0 ];
      }
      reset() {
        this.judgeCount =  [ 0,0,0,0,0,0,0,0,0,0 ];
        this.displayAllJudgeLamp()
        this.pm.reset()
      }

      displayAllJudgeLamp() {
        for (var i=1 ; i<=10 ; i++) {
          this.displayJudgeLamp(i)
        }
      }
      getStatus() {
        return this.judgeCount.join(":")
      }
      setStatus(s) {
        var a = s.split(":")
        for (var i=0; i<10; i++) {
          this.judgeCount[i] = parseInt(a[i])
        }
        this.pm.setCount(this.sumupJudgeCount())
        this.displayAllJudgeLamp()
        this.pm.drawNowCount();

      }
      sumupJudgeCount(){
        var s = 0
        for (var i = 0 ; i < 10 ; i++){
          s += this.judgeCount[i]
        }
        return s
      }
      displayJudgeLamp(j){
        switch (this.judgeCount[j - 1]) {
            case 0:
              document.getElementById("j"+j+"lamp").src = "img/p0.png"
              break
            case 1:
              document.getElementById("j"+j+"lamp").src = "img/p1.png"
              break
            case 2:
              document.getElementById("j"+j+"lamp").src = "img/p2.png"
              break
          }
      }
      judge(j) {
        if (j<1 || j>10) {
          return
        }
        if (this.judgeCount[ j - 1 ] < 2) {
          this.judgeCount[ j - 1 ]++
          this.displayJudgeLamp(j)
        }
        const s = this.sumupJudgeCount()
        while (this.pm.getCount() < s) {
          this.pm.increment()
        }
      }
    }

    window.onload = () => {
      const context = document.getElementById("contentMain").getContext("2d")
      const contextFrameAnim = document.getElementById("contentFrameAnim").getContext("2d")
      const pm = new PanelManager(context, contextFrameAnim)
      const jm = new JudgeManager(pm)
      const ws = new WebSocket('wss://cloud.achex.ca/medakasou002')
      // const myid = Math.random().toString(32).substring(2);

      const params = new URLSearchParams(document.location.search);
      var mode = params.get("mode");
      if (mode == "server") {
        console.log("This is server.")
      }else{
        console.log("This is clinet.")
        mode = "client";
      }
      ws.onopen = e => {
        // 認証（auth, passwordは何でもOK）
	      ws.send(JSON.stringify({"auth": "meda", "password": "meda1234"}));
        ws.send(JSON.stringify({"to": "meda", "message": 'Login'}));
      }
      // メッセージ受信
      ws.onmessage = e => {
        var obj = JSON.parse(e.data);
        if(obj.auth == 'OK'){
          // 認証OK
          return;
        }
        console.log(e.data)
          switch( obj.message){
            case "Login":
              if(mode == "server" ){
                ws.send(JSON.stringify({"to": "meda", "message": "init", "status": jm.getStatus() }))
              }
              break;
            case "reset":
              jm.reset();
              break
            case "init":
              jm.setStatus(obj.status);
              break;
            case "countup":
              pm.increment();
              break;
            case "judge":
              console.log("obj.judgeNumber : " + obj.judgeNumber)
              jm.judge(obj.judgeNumber);
              break;
          }
      }
      document.addEventListener("keydown", (e) => {
        e.preventDefault()

        // key A, S, D
        const keys = [65, 83, 68]

        switch (e.keyCode) {
          case 65: // 'A' key
          case 83: // 'S' key
          case 68: // 'D' key
          case 32: // 'Space' key
            ws.send(JSON.stringify({"to": "meda", "message": "countup"}));
            // pm.increment()
            break
          case 82: // 'R' key
            ws.send(JSON.stringify({"to": "meda", "message": "reset", "count": "0"}));
            //pm.reset()
            break
          case 77: // 'M' key
            pm.changeVolume(0)
            break
          default:
            break
        }
      })

      // modal
      document.getElementById("help").onclick = () => {
        document.getElementsByClassName("modal")[0].classList.add("is-active")
      }

      document.getElementsByClassName("modal-background")[0].onclick = () => {
        document.getElementsByClassName("modal")[0].classList.remove("is-active")
      }

      // show helper buttons
      document.getElementById("show-helper-buttons").onclick = () => {
        // NOTE: iPhoneはイベント中でしかload, playを受け付けないため、事前load用の処理
        if (!pm.isLoadedSE) {
          pm.preloadSE()
          pm.isLoadedSE = true
        }

        const hideClassName = "is-hide"
        const helperButtons = document.getElementById("helper-buttons")

        if (helperButtons.classList.contains(hideClassName)) {
          helperButtons.classList.remove(hideClassName)
        } else {
          helperButtons.classList.add(hideClassName)
        }
      }

      // events.
      document.getElementById("increment").onclick = (e) => {
        pm.increment()
        e.currentTarget.blur()
      }
      document.getElementById("reset").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "reset"}));
        //pm.reset()
        e.currentTarget.blur()
      }
      document.getElementById("volumeRange").onchange = (e) => {
        const volume = e.target.value * 0.1
        pm.changeVolume(volume)
      }
      document.getElementById("judge1").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "1"}));
        //pm.judge(1)
        e.currentTarget.blur()
      }
      document.getElementById("judge2").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "2"}));
        //pm.judge(2)
        e.currentTarget.blur()
      }
      document.getElementById("judge3").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "3"}));
        //pm.judge(3)
        e.currentTarget.blur()
      }
      document.getElementById("judge4").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "4"}));
        //pm.judge(4)
        e.currentTarget.blur()
      }
      document.getElementById("judge5").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "5"}));
        //pm.judge(5)
        e.currentTarget.blur()
      }
      document.getElementById("judge6").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "6"}));
        //pm.judge(6)
        e.currentTarget.blur()
      }
      document.getElementById("judge7").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "7"}));
        //pm.judge(7)
        e.currentTarget.blur()
      }
      document.getElementById("judge8").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "8"}));
        //pm.judge(8)
        e.currentTarget.blur()
      }
      document.getElementById("judge9").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "9"}));
        //pm.judge(9)
        e.currentTarget.blur()
      }
      document.getElementById("judge10").onclick = (e) => {
        ws.send(JSON.stringify({"to": "meda", "message": "judge", "judgeNumber": "10"}));
        //pm.judge(10)
        e.currentTarget.blur()
      }
    }
    const showContent = () => {
      document.getElementById("progress-section").classList.add("is-hide")
      document.getElementById("main-section").classList.remove("is-hide")
    }
  </script>


  
</body></html>